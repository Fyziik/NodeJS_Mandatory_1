<!-- head component -->
<%- include('../partials/head') %>

<!-- Header -->
<%- include('../partials/header') %>

<!-- Content -->
<div class="row">
    <!-- Sidebar partial -->
    <%- include('../partials/sidebar') %>
    <!-- The "meat" of the pages -->
    <div class="col" id="content">
      <div>
        
        <h1 style="margin-left: 31.5%;">Session three</h1>

        <div class="sessionContent">
          <h2>Theory about variables (var vs let & const)</h2>
          <p>
            Var outdated because it caused errors since it was a variable that had global access, 
            so major programs and having vars would result in major errors. Therefore we now use let & const. 
            Let is mutable and can be changed throughout its lifespan, but a const is immutable, and can not be changed once assigned.
          </p>
        </div>

        <div class="sessionContent">
          <h2>Type Coercion</h2>
          <p>
            When programming in Javascript, you have to know the difference between == and ===.
            When using double == we’re comparing the values of whatever is on the sides of the equal signs. 
            For instance, when comparing the string “5” and the number 5 i.e: <br>
            <img src="/imgs/TypeCoercion1.PNG" alt="" class="centerImage"> <br>
            This will evaluate to true, because the actual value inside each is 5, 
            but in programs it's risky to have this kind of loose evaluation, therefore we’d like to 
            compare both to value AND to the data type, so we make sure that they’re actually the same. 
            Therefore we use triple equal signs “===” to both compare by value & data type. <br>
            <img src="/imgs/TypeCoercion2.PNG" alt="" class="centerImage"> <br>
            Now this will evaluate to false, even though we didn't change anything BUT add another equal sign. 
            Using triple equals sign is the right way to program with Javascript, since both the programmer 
            and the computer should be able to tell data types apart, and using === makes sure 
            both you and the computer do exactly that.
          </p>
        </div>

        <div class="sessionContent">
          <h2>NPM (Node Package Manager)</h2>
          <p>
            NPM er hvad Node.js anvender som package manager, og bruges til at hente og installere dependencies 
            til pakker man godt vil anvende i ens kode. Såsom når vi indtaster <em>“npm install express”</em> i terminalen, 
            dermed henter NPM de nødvendige filer indenfor Express frameworket som vi har behov for, for at 
            kunne anvende Express i vores projekt.
          </p>
        </div>

        <div class="sessionContent">
          <h2>Nodemon</h2>
          <p>
            Nodemon is a build tool we install, and makes it automatic to shutdown and setup the listening server, 
            so that we don't have to do it ourselves. Nodemon is activated in the terminal by typing <em>"nodemon [file]"</em>
          </p>
        </div>


      </div>
    </div>
</div>

<!-- Footer Component -->
<%- include('../partials/footer') %>